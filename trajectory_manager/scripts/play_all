#!/usr/bin/env python3
"""
Playback of trajectories and storing them into a databaseself.
"""
from Learning_from_Demonstration import Learning_from_Demonstration
import sys
import os
import rospy

if __name__ == '__main__':
    try:
        arg1 = int(sys.argv[1])
    except IndexError:
        print("Usage: " + os.path.basename(__file__) + " <trajectory_file_name>")
        sys.exit(1)

    if arg1:
        faster = "_faster"
    else:
        faster = ""

    lfd = Learning_from_Demonstration()
    lfd.load("icra_blue_button")
    try:
        lfd.execute(spiral_flag=0)
    except rospy.ROSInterruptException:
        pass

    lfd.load("icra_key_thur" + faster)
    try:
        lfd.execute(spiral_flag=1)
    except rospy.ROSInterruptException:
        pass

    lfd.load("icra_battery_case_thur_2" + faster)
    try:
        lfd.execute(spiral_flag=0)
    except rospy.ROSInterruptException:
        pass

    lfd.load("icra_battery_eject_yellow_2" + faster)
    try:
        lfd.execute(spiral_flag=0)
    except rospy.ROSInterruptException:
        pass

    lfd.load("icra_battery_pick_yellow" + faster)
    try:
        lfd.execute(spiral_flag=1)
    except rospy.ROSInterruptException:
        pass

    lfd.load("icra_battery_eject_blue_2" + faster)
    try:
        lfd.execute(spiral_flag=0)
    except rospy.ROSInterruptException:
        pass

    lfd.load("icra_battery_pick_blue_2" + faster)
    try:
        lfd.execute(spiral_flag=1)
    except rospy.ROSInterruptException:
        pass

    lfd.load("icra_ethernet_thur_orig" + faster)
    try:
        lfd.execute(spiral_flag=1)
    except rospy.ROSInterruptException:
        pass

    lfd.load("icra_red_button" + faster)
    try:
        lfd.execute(spiral_flag=0)
    except rospy.ROSInterruptException:
        pass


